##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {

        server_name MyPhpApp;

        listen 80;
        listen [::]:80;

        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        include snippets/snakeoil.conf;

        root /var/www/public;

        # Add index.php to the list if you are using PHP
        index index.php index.html;

        try_files $uri $uri/ =404;


        location ~ \.php$ {
                include snippets/fastcgi-php.conf;        
                fastcgi_pass unix:/run/php/php8.2-fpm.sock;  
        }


        location /favicon.ico {
                alias /var/www/public/logo.svg;
                types { } default_type  "image/svg+xml charset=utf-8";
        }
        

        location /protected/ {
                root /var/www; 
                allow 127.0.0.1;
                allow ::1;
                deny all;
                try_files $uri $uri/ =404;
                location ~ \.php$ {
                        include snippets/fastcgi-php.conf;        
                        fastcgi_pass unix:/run/php/php8.2-fpm.sock;  
                }
        }


        location ~ ^/private {
                deny all;
        }


        # rickroll
        location /.env {
                rewrite ^ https://bit.ly/3BlS71b permanent;
        }


        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        
        location ~ /\.ht {
              deny all;
        }
}
